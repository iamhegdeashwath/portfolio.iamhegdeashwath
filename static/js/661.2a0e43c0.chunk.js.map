{"version":3,"file":"static/js/661.2a0e43c0.chunk.js","mappings":"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","sources":["pages/ContactsPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n//import { useOutletContext } from 'react-router-dom';\nimport ReactGA from 'react-ga4';\n\nconst ContactsPage = ({pageCard}) => {\n\n    //const { activeMenu, setActiveMenu } = useOutletContext();\n    const [isLoading, setIsLoading] = useState(true);\n    const [formData, setFormData] = useState({\n        name: \"\",\n        email: \"\",\n        message: \"\",\n    });\n    const [successMessage, setSuccessMessage] = useState(\"\");\n    const [errorMessage, setErrorMessage] = useState(\"\");\n    const [isSubmitting, setIsSubmitting] = useState(false);\n\n    useEffect(() => {\n        return () => {\n            setIsLoading(true);\n        };\n    }, []);\n\n    const handleIframeLoad = () => {\n        setIsLoading(false);\n    };\n\n    const setFormField = (e) => {\n        setFormData({\n            ...formData,\n            [e.target.name]: e.target.value,\n        });\n    };\n\n    const formDataWithHiddenFields = {\n        ...formData,\n        _captcha: \"false\"\n    };\n\n    const sendMessage = async (e) => {\n        e.preventDefault();\n        setIsSubmitting(true);\n        try {\n            const response = await fetch(\"https://formsubmit.co/hegde.ashwath1@gmail.com\", {\n                method: \"POST\",\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                },\n                body: JSON.stringify(formDataWithHiddenFields),\n            });\n\n            if (response.ok) {\n                setSuccessMessage(\"Your message has been sent successfully!\");\n                setErrorMessage(\"\");\n                setFormData({ name: \"\", email: \"\", message: \"\" });\n                setIsSubmitting(false);\n            } else {\n                throw new Error(\"Something went wrong. Please try again.\");\n            }\n        } catch (error) {\n            setErrorMessage(error.message);\n            setSuccessMessage(\"\");\n        }\n        ReactGA.event({\n            category: 'User',\n            action: 'Clicked Button',\n            label: 'Send Message via Contact Page',\n        });\n    };\n\n    return (\n        <>\n            <header>\n                <h2 className=\"h2 article-title\">{pageCard.pageTitle}</h2>\n            </header>\n\n            <section className=\"mapbox\" data-mapbox>\n                <figure>\n                    {isLoading && (\n                        <div className=\"spinner-container\">\n                        <div className=\"spinner\"></div>\n                        </div>\n                    )}\n                    <iframe\n                        width=\"600\"\n                        height=\"450\"\n                        style={{border:'0'}}\n                        title=\"Milpitas, California Area\"\n                        loading=\"lazy\"\n                        src=\"https://www.google.com/maps/embed/v1/place?key=AIzaSyAqRj_nUu61uhSvia4D5_IaN5yTduwCD5g&q=Milpitas,CA\"\n                        onLoad={handleIframeLoad} >\n                    </iframe>\n                </figure>\n                </section>\n                <section className=\"contact-form\">\n                <h3 className=\"h3 form-title\">Contact Form</h3>\n                <form onSubmit={sendMessage} className=\"form\" data-form>\n                    <input type=\"hidden\" name=\"_captcha\" value=\"false\" className=\"form-input\"/>\n                    <div className=\"input-wrapper\">\n                        <input type=\"text\" name=\"name\" value={formData.name} className=\"form-input\" placeholder=\"Full name\" onChange={setFormField} required data-form-input />\n                        <input type=\"email\" name=\"email\" value={formData.email} className=\"form-input\" placeholder=\"Email address\" onChange={setFormField} required data-form-input />\n                    </div>\n                    \n                    <textarea name=\"message\" className=\"form-input\" value={formData.message} placeholder=\"Your Message\" onChange={setFormField} required data-form-input></textarea>\n                    <button className=\"form-btn\" type=\"submit\" disabled={isSubmitting} data-form-btn>\n                        <ion-icon name=\"paper-plane\"></ion-icon>\n                        <span>{isSubmitting ? \"Sending...\" : \"Send Message\"}</span>\n                    </button>\n                </form>\n                {\n                    successMessage && <div className=\"alert alert-success-msg alert-dismissible fade show\">\n                        {successMessage}\n                        <button type=\"button\" className=\"btn-close\" \n                            data-bs-dismiss=\"alert\" aria-label=\"Close\"\n                            onClick={() => setSuccessMessage(\"\")}></button>\n                    </div>\n                }\n                {\n                    errorMessage && <div className=\"alert alert-error-msg alert-dismissible fade show\">\n                        {errorMessage}\n                        <button type=\"button\" className=\"btn-close\" \n                            data-bs-dismiss=\"alert\" aria-label=\"Close\"\n                            onClick={() => setErrorMessage(\"\")}></button>\n                    </div>\n                }\n            </section>\n        </>\n    );\n}\n\nexport default ContactsPage"],"names":["_ref","pageCard","isLoading","setIsLoading","useState","formData","setFormData","name","email","message","successMessage","setSuccessMessage","errorMessage","setErrorMessage","isSubmitting","setIsSubmitting","useEffect","setFormField","e","target","value","formDataWithHiddenFields","_captcha","_jsxs","_Fragment","children","_jsx","className","pageTitle","width","height","style","border","title","loading","src","onLoad","handleIframeLoad","onSubmit","async","preventDefault","fetch","method","headers","body","JSON","stringify","ok","Error","error","ReactGA","event","category","action","label","type","placeholder","onChange","required","disabled","onClick"],"sourceRoot":""}